on:
  push:
    branches:
      - main
  pull_request: {}

env:
  XDG_CACHE_HOME: ${{ github.workspace }}/.cache/xdg

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Go Build
        run: go build -v ./...
      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_GO: true
          DEFAULT_BRANCH: main
          FILTER_REGEX_EXCLUDE: .*vendor/.*
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Unit Test with Race
        run: |
          go test -v --race $(go list ./... | (grep -v /vendor/))
